{"ast":null,"code":"import _slicedToArray from \"/Users/lucybirkhead/Desktop/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/lucybirkhead/Desktop/react-app/src/WeatherForecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherForecastPreview from \"./WeatherForecastPreview\";\nimport \"./WeatherForecast.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecast(props) {\n  _s();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loaded = _useState2[0],\n        setLoaded = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        forecast = _useState4[0],\n        setForecast = _useState4[1];\n\n  function handleForecastResponse(response) {\n    setForecast(response.data);\n    setLoaded(true);\n  }\n\n  if (loaded && props.city === forecast.city.name) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast row\",\n      children: [/*#__PURE__*/_jsxDEV(WeatherForecastPreview, {\n        data: forecast.list[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(WeatherForecastPreview, {\n        data: forecast.list[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(WeatherForecastPreview, {\n        data: forecast.list[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(WeatherForecastPreview, {\n        data: forecast.list[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(WeatherForecastPreview, {\n        data: forecast.list[4]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(WeatherForecastPreview, {\n        data: forecast.list[5]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this);\n  } else {\n    let apiKey = \"19e635cfd49a09267430a421d97c1f42\";\n    let url = \"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(props.city, \"&appid=\").concat(apiKey, \"&units=metric\");\n    axios.get(url).then(handleForecastResponse);\n    return null;\n  }\n}\n\n_s(WeatherForecast, \"20/pdcvQnLtcZUd5Lz9vhTDggVQ=\");\n\n_c = WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"sources":["/Users/lucybirkhead/Desktop/react-app/src/WeatherForecast.js"],"names":["React","useState","axios","WeatherForecastPreview","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","handleForecastResponse","response","data","city","name","list","apiKey","url","get","then"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAO,uBAAP;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAAA,oBACfJ,QAAQ,CAAC,KAAD,CADO;AAAA;AAAA,QACpCK,MADoC;AAAA,QAC5BC,SAD4B;;AAAA,qBAEfN,QAAQ,CAAC,IAAD,CAFO;AAAA;AAAA,QAExCO,QAFwC;AAAA,QAE9BC,WAF8B;;AAI/C,WAASC,sBAAT,CAAgCC,QAAhC,EAA0C;AACtCF,IAAAA,WAAW,CAACE,QAAQ,CAACC,IAAV,CAAX;AACAL,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH;;AAED,MAAID,MAAM,IAAID,KAAK,CAACQ,IAAN,KAAeL,QAAQ,CAACK,IAAT,CAAcC,IAA3C,EAAiD;AAC7C,wBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACQ,QAAC,sBAAD;AAAwB,QAAA,IAAI,EAAEN,QAAQ,CAACO,IAAT,CAAc,CAAd;AAA9B;AAAA;AAAA;AAAA;AAAA,cADR,eAEQ,QAAC,sBAAD;AAAwB,QAAA,IAAI,EAAEP,QAAQ,CAACO,IAAT,CAAc,CAAd;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFR,eAGQ,QAAC,sBAAD;AAAwB,QAAA,IAAI,EAAEP,QAAQ,CAACO,IAAT,CAAc,CAAd;AAA9B;AAAA;AAAA;AAAA;AAAA,cAHR,eAIQ,QAAC,sBAAD;AAAwB,QAAA,IAAI,EAAEP,QAAQ,CAACO,IAAT,CAAc,CAAd;AAA9B;AAAA;AAAA;AAAA;AAAA,cAJR,eAKQ,QAAC,sBAAD;AAAwB,QAAA,IAAI,EAAEP,QAAQ,CAACO,IAAT,CAAc,CAAd;AAA9B;AAAA;AAAA;AAAA;AAAA,cALR,eAMQ,QAAC,sBAAD;AAAwB,QAAA,IAAI,EAAEP,QAAQ,CAACO,IAAT,CAAc,CAAd;AAA9B;AAAA;AAAA;AAAA;AAAA,cANR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAXD,MAWO;AACH,QAAIC,MAAM,GAAG,kCAAb;AACA,QAAIC,GAAG,gEAAyDZ,KAAK,CAACQ,IAA/D,oBAA6EG,MAA7E,kBAAP;AACAd,IAAAA,KAAK,CAACgB,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBT,sBAApB;AAEA,WAAO,IAAP;AACH;AAEA;;GA5BuBN,e;;KAAAA,e","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherForecastPreview from \"./WeatherForecastPreview\";\nimport \"./WeatherForecast.css\";\n\nexport default function WeatherForecast(props) {\n    const [loaded, setLoaded] = useState(false);\nconst [forecast, setForecast] = useState(null);\n\nfunction handleForecastResponse(response) {\n    setForecast(response.data);\n    setLoaded(true);\n}\n\nif (loaded && props.city === forecast.city.name) {\n    return (\n        <div className=\"WeatherForecast row\">\n                <WeatherForecastPreview data={forecast.list[0]} />\n                <WeatherForecastPreview data={forecast.list[1]} />\n                <WeatherForecastPreview data={forecast.list[2]} />\n                <WeatherForecastPreview data={forecast.list[3]} />\n                <WeatherForecastPreview data={forecast.list[4]} />\n                <WeatherForecastPreview data={forecast.list[5]} />\n         </div>\n    );\n} else {\n    let apiKey = \"19e635cfd49a09267430a421d97c1f42\";\n    let url = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\n    axios.get(url).then(handleForecastResponse);\n\n    return null;\n}\n   \n}\n\n"]},"metadata":{},"sourceType":"module"}